{
    "name": "MSBuild-RS Development Environment",
    "dockerFile": "Dockerfile",
    "features": {
        "ghcr.io/devcontainers/features/common-utils:2": {
            "installZsh": true,
            "configureZshAsDefaultShell": true,
            "installOhMyZsh": true,
            "upgradePackages": true,
            "username": "vscode",
            "userUid": "automatic",
            "userGid": "automatic"
        },
        "ghcr.io/devcontainers/features/git:1": {
            "ppa": true,
            "version": "latest"
        }
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "rust-lang.rust-analyzer",
                "vadimcn.vscode-lldb",
                "serayuzgur.crates",
                "tamasfe.even-better-toml",
                "ms-vscode.test-adapter-converter",
                "hbenl.vscode-test-explorer",
                "swellaby.vscode-rust-test-adapter",
                "dustypomerleau.rust-syntax",
                "fill-labs.dependi"
            ],
            "settings": {
                "rust-analyzer.check.command": "clippy",
                "rust-analyzer.cargo.buildScripts.enable": true,
                "rust-analyzer.procMacro.enable": true,
                "rust-analyzer.diagnostics.enable": true,
                "rust-analyzer.hover.actions.enable": true,
                "rust-analyzer.inlayHints.enable": true,
                "rust-analyzer.lens.enable": true,
                "rust-analyzer.completion.autoimport.enable": true,
                "terminal.integrated.defaultProfile.linux": "zsh",
                "terminal.integrated.profiles.linux": {
                    "zsh": {
                        "path": "/bin/zsh"
                    }
                }
            }
        }
    },
    "forwardPorts": [],
    "postCreateCommand": "chmod +x .devcontainer/setup.sh && .devcontainer/setup.sh",
    "postStartCommand": "git config --global --add safe.directory ${containerWorkspaceFolder}",
    "remoteUser": "vscode",
    "workspaceFolder": "/workspace",
    "mounts": [
        "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
    ]
}
